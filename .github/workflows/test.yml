on: [push]
jobs:
  black:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: "3.9"
      - name: install dependencies
        run: |
          curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/install-poetry.py | python
          echo "$HOME/.local/bin" >> $GITHUB_PATH
          poetry install --no-interaction
      - name: black
        run: poetry run black --check src tests
  pylint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: "3.9"
      - name: install dependencies
        run: |
          curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/install-poetry.py | python
          echo "$HOME/.local/bin" >> $GITHUB_PATH
          poetry install --no-interaction
      - name: pylint
        run: poetry run pylint --disable C src tests
  mypy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: "3.9"
      - name: install dependencies
        run: |
          curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/install-poetry.py | python
          echo "$HOME/.local/bin" >> $GITHUB_PATH
          poetry install --no-interaction
      - name: mypy
        run: poetry run mypy src tests
  test:
    strategy:
      fail-fast: false
      matrix:
        python-version:
          - "3.7"
          - "3.8"
          - "3.9"
          - "3.10.0-beta.1"
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - run: |
          curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/install-poetry.py | python
      - if: ${{ matrix.os == 'windows-latest' }}
        run: echo "$Env:APPDATA/Python/Scripts" >> $Env:GITHUB_PATH
      - if: ${{ matrix.os == 'ubuntu-latest' || matrix.os == 'macos-latest'}}
        run: echo "$HOME/.local/bin" >> $GITHUB_PATH
      - run: poetry install -vvv --no-interaction
      - run: poetry run coverage run -m pytest
      - run: |
          poetry run coverage report
          poetry run coverage html
      - uses: actions/upload-artifact@v2
        with:
          name: coverage
          path: src/htmlcov
